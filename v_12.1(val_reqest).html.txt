<!--#include virtual=/inc/vbutil.inc-->
<%
sql="GWU_GLOBAL_LANGUAGE "
set languageset=getsp_by_conn(getconnection(),sql)

%>
<style>
	#div_zipwrap{
		overflow-y: scroll;
		overflow-x: hidden;
		padding-bottom:10px;
	}
    /* 주소검색창 */
    #add_input{
        width: calc(100% - 70px);
        border:none;
        text-indent:32px;
        height: 44px; 
        z-index:49;
        float:center; 
        background-color:#f1f1f1;
        border-radius:50px; 
        border:1px solid #ccc; 
        margin-left: -43px;
        margin-top: -8px;
    }
    #add_input::placeholder {
        font-size:1.5em;
    }
    #add_input:focus {outline: none;}
    .material-symbols-outlined{
        margin-left:63px;
        z-index:50;
    }
    /* Tip */
    div.tip{
		padding:20px;
        text-align:center; 
        font-size:1.2em; 
        color:#888
	}
    /* map */
    #map{
        width:calc(100% - 50px);
        height:300px;
        display:block;
        margin:0 auto; 
        margin-left: 27px;
    }
    /* 결과 list */
    #resultContainer{
		display: none;
		padding:20px 20px 30px 20px;
        font-weight: 500;
	}
	.add_li{
		width:100%;
        display: table;
        cursor: pointer;
    }
    .add_li p,
    .add_li span,
        .add_li a{
	    display: table-cell;
        vertical-align: middle;
        padding:5px;
    }
    .add_li span{
        padding: 5px 5px 5px 0px;
    }
    .add_li span{width: calc(100% - 150px);}
    .add_li p{width: 80px;padding-left:10px;color:#ff6600;}
    .add_li a{width: 50px;}

	.add_li:not(:last-child) {
		border-bottom:1px dotted #dddddd;
    }
   
	@media ( max-width:1000px ) {
		#div_zipwrap{
			max-height: 50vh;
			position: relative;
		}
		#tr_zipwrap td{position: inherit;}	
	}

   
</style>
</head>

<body>

    <% 
    cName=request("cName") '영문국가명
    cCode=request("cCode")	' 국가코드 
    lCode=request("lCode")	' 언어코드 
    recv_addr=request("recv_addr")

    if cCode="HK" then initialZipCode="070"
    ' response.write "lCode: " &lCode&"<br>"
    ' response.write "cCode: "&cCode&"<br>"
    ' response.write "cName: "&cName&"<br>"
     %>
        <div id="wrap" >
            <div style="float:left;width:100%;text-align:center; padding:0;">
	            <input id="add_input" type="text" class="presubmit" submit="mySubmit" placeholder="<%=getLang("주소검색","85")%>" value="<%=recv_addr%>">
	            <div style="width:50px;float:left; z-index:50;">
		            <a href="javascript:void(0);" onclick="mySubmit();" class="material-symbols-outlined w500">search</a>
	            </div>
            </div>
            <br>
            <input type="hidden" id="hidden_country" />
            <input type="hidden" id="lCode" value=<%=lCode%>/>
            <input type="hidden" id="cName" value=<%=cName%>/>
            <input type="hidden" id="cCode" value=<%=cCode%>/>
            <input type="hidden" id="noSearch" value="<%=getLang("검색X","120")%>"/>
            <input type="hidden" id="nopostCode" value="<%=getLang("우편번호X","347")%>"/>
            <input value="<%=initialZipCode%>" type="hidden" id="zipcode"/>
            <br>
            <div class="tip">
                <b>Tip</b>
                <p><b>City name + street address </b></p>
                <p style="font-size:0.9em;">ex) 中国广东省佛山市南海区</p>
            </div>
            <div id="resultContainer">
	            <ul id="results"></ul>
            </div>
			<div id="map"></div>  
        </div>

        <script type="text/javascript">   
            $(document).ready(function () {
                //포커스          
                $("#add_input").focus();

                //****main_6.asp css 수정
                $("#tr_zipwrap>td .a_close").css({
                    "right": "-5px",
                    "top": "-1px"
                })
                $(".material-symbols-outlined").css({
                    "position": "relative",
                    "margin-left": "49px",
                    "margin-top": "3px",
                    "z-index": 50
                })
                //----검색문구 넣기 
                //----구글 API
                var loadMapsAPI = true;
                if (loadMapsAPI) {
                    var script = document.createElement('script');
                    script.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyC9j1_VWxunFKcuEBNClftVAk3bTgQD39A&libraries=places&callback=initMap";
                    script.async = true;
                    script.defer = true;
                    document.head.appendChild(script);
                }
            });
            
            //----엔터처리
            $("#add_input").keypress(function (event) {
                if (event.which == 13) {
                    event.preventDefault();
                    mySubmit(event);
                }  
            })

            //*************************************************
            //map, infowindow, address, placesService 전역
            //*************************************************

            var map;
            var infowindow;
            var placesService;
            var address;
            var addInput = $("#add_input");
            var flag = false;
            var zh_cn="zh-CN"
            var lCode = "<%=lCode%>";              
            var cName = "<%=cName%>";  
            var noSearch = $("#noSearch").val();         
            var nopostCode = $("#nopostCode").val();  
        
            //****맵 초기화        
            function initMap(cName) {
                cName="<%=cName%>"; 
                var defaultLatLng = new google.maps.LatLng(0, 0);
                infowindow = new google.maps.InfoWindow();
                map = new google.maps.Map(document.getElementById("map"), {
                    center: defaultLatLng,
                    zoom: 7,
                    streetViewControl: false,
                    mapTypeControl: false,
                    fullscreenControl:false,
                    zoomControl:false
                });  
                placesService = new google.maps.places.PlacesService(map);
                var request = {
                    query: String(cName),
                    fields: ['geometry'],
                };            
                placesService.findPlaceFromQuery(request, function(results, status) {
                    if (status === google.maps.places.PlacesServiceStatus.OK && results && results.length > 0) {
                        map.setCenter(results[0].geometry.location);
                                            }
                });
            }

            //----검색버튼 이벤트
            var search_btn = $(".search_btn");
            search_btn.on("click", function (e) {
                $(".tip").hide()
                mySubmit(e)
            });
            

            //********마커 함수
            function addMarker(location) {
                var marker = new google.maps.Marker({
                    position: location,
                    map: map
                });
                map.setCenter(location);
                map.setZoom(15);
            }

            //**********리스트 클릭 함수(홍콩부분 다시 세팅 )
           function liClick(place, postal_code, setAdd) {
                //addInput.val(setAdd).focus(); 
                var en_address = place.formatted_address;
                //postcodeX, the correct addressX
                if (!postal_code || !place.formatted_address) {
                    alert(nopostCode);
                    console.log(123,"함수내 값");
                    $("#recv_zip").focus();
                    $("#div_zipwrap").slideUp();
                    $("#recv_addr2").val(setAdd);
                    $("#recv_zip").val("");
                    if (lCode === "zh_cn") {        
                        $("#div_zipwrap").slideUp();                  
                        $("#recv_addr2").focus()
                        $("#recv_addr1").val(setAdd);
                        $("#recv_zip").val("");
                    }
                    $("#recv_zip").focus();
                } else {
                    $("#recv_zip").val(postal_code);
                    // $("#recv_addr2").val(setAdd);
                    $("#recv_addr2").val(en_address);
                    $("#div_zipwrap").slideUp();
                    if (lCode === "zh_cn") {  
                        $("#recv_addr1").val(place); 
                        $("#recv_addr2").val(en_address); 
                    }
                    
                }
            }

            //*********getDetail 비동기 함수
             function getPlaceDetails(placeId) {
                var deferred = $.Deferred();
                placesService.getDetails({ placeId: placeId, language: "en" }, function(place, status) {
                    if (status === google.maps.places.PlacesServiceStatus.OK) {
                        deferred.resolve(place);
                    } else {
                        deferred.reject(status);
                    }
                });
                return deferred.promise();
            }
            //*********우편번호 함수
            function getPostalCode(place) {
                var postal_code = "";
                for (let i = 0; i < place.address_components.length; i++) {
                    if (place.address_components[i].types.includes("postal_code")) {
                        postal_code = place.address_components[i].long_name;
                        break;
                    }
                }
                return postal_code;
            }

            //*********주소 내 문자제거 함수
          function setAddressDescription(predi, postalCode) {
                return predi.description.replace(/Chome−[\d\-]+/, '')
                                        .replace(/chōme-[\d\-]+/i, '')
                                        .replace(postalCode, '')
                                        .replace(/ō/g, 'o')
                                        .trim();
            }


            //*********li생성 함수
            function createListItem(predi, place, postalCode, setAddress) {
                var li = $('<li class="add_li"></li>');
                // 홍콩주소확인
                var isHkAdd = predi.description.includes('Hong Kong');
                if (!postalCode || !place.formatted_address || isHkAdd) {
                    if (isHkAdd) postalCode = '070';
                    li.html(`<p class="zipcode_res">${postalCode}</p><span class="address">${setAddress}</span>`); 
                    li.on("click", function () {
                        if (!flag) {
                            flag=true;
                            $("#recv_addr1").val(predi.description);
                            $("#recv_addr2").val(setAddress);
                            $("#recv_zip").val("");
                        }
                    });
                    
                } else {
                    li.html('<p class="zipcode_res">' + postalCode + '</p> ' +
                        '<span class="address">'+setAddress+ '</span>'+
                        '<a class="material-symbols-outlined">pin_drop</a>'
                    );
                    
                    //----리스트 클릭 마커 제외(not)
                    li.not('.material-symbols-outlined').on("click", function () {
                        liClick(place, postalCode, setAddress);
                    });
                    
                    //마커 클릭
                    li.find('.material-symbols-outlined').on('click', function() {
                        if (place.geometry && place.geometry.location) { 
                            addMarker(place.geometry.location); 
                        }
                        //버블링 차단
                        event.stopPropagation();
                    });
                }
                return li;
            }

            //*********서치이벤트 함수
            function mySubmit() {
                //No blank API call
                var inputValue = $("#add_input").val().trim();
                var isWhitespace = /\s{3,}/.test(inputValue);
                var lCode = $("#lCode").val();
                var zipcodeInput = $("#zipcode");
                if (inputValue === "" || isWhitespace) {
                    alert(noSearch);
                    return; 
                }
                address = `${addInput.val()} ${$("#hidden_country").val()}`;
                const autocompl = new google.maps.places.AutocompleteService();

                //----자동주소 호출
                autocompl.getPlacePredictions(
                    { input: address, language: lCode },
                    function (predictions, status) {
                        if (status != google.maps.places.PlacesServiceStatus.OK) {
                            console.error("Error_code: " + status);
                            //*****상세주소 X, 사용자 직접 수정→ 상세 수정으로 이동
                            if (status == google.maps.places.PlacesServiceStatus.ZERO_RESULTS) {
                                lCode = lCode.replace("/", "");
                                alert(noSearch)
                                //값 공백으로 할지 수정할지 결정 필요
                                $("#add_input").val();
                                $("#recv_addr2").val("");    
                                $("#add_input").focus();                              
                                // $("#div_zipwrap").slideToggle();
                                if (lCode===zh_cn){  
                                    $("#recv_addr1").val(addInput.val());
                                }
                            }
                            else alert(status);
                            return;
                        }           

                        //----주소 리스트 생성
                        $("#results").html("");
                        predictions.forEach(function (predi) {
                            var li = $('<li class="add_li"></li>');
                              getPlaceDetails(predi.place_id)
                               .done(function(place) {
                                    if (place.geometry && place.geometry.location) { 
                                        addMarker(place.geometry.location); 
                                    }
                                    var postal_code = getPostalCode(place)
                                    var setAddress=setAddressDescription(predi, postal_code);
                                    var li = createListItem(predi, place, postal_code, setAddress);
                                    li.on("click", function () {
                                        liClick(place, postal_code, setAddress);
                                        $("#recv_addr2").focus(); 
                                    });
                                    $("#results").append(li);
                                    $("#resultContainer").show();
                                    $(".tip").hide();
                                })
                                 .fail(function(errorStatus) { 
                                    console.error("Error details: ", errorStatus);
                                });
                        })
                    })
                }
            window.initMap = initMap;
        </script>
</body>

</html>
<%
languageset.Close
set languageset=nothing
%>